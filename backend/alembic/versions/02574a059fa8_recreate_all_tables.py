"""recreate_all_tables

Revision ID: 02574a059fa8
Revises: d4afb19257f6
Create Date: 2025-10-20 13:50:24.379192

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

revision: str = '02574a059fa8'
down_revision: Union[str, None] = 'd4afb19257f6'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_system_configs_system_id', table_name='system_configs')
    op.drop_table('system_configs')
    op.drop_index('ix_feature_flags_system_id', table_name='feature_flags')
    op.drop_table('feature_flags')
    op.add_column('action_items', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.create_index(op.f('ix_action_items_id'), 'action_items', ['id'], unique=False)
    op.add_column('action_plans', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.create_index(op.f('ix_action_plans_id'), 'action_plans', ['id'], unique=False)
    op.add_column('availability_slots', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.create_index(op.f('ix_availability_slots_id'), 'availability_slots', ['id'], unique=False)
    op.add_column('biomarkers', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.create_index(op.f('ix_biomarkers_id'), 'biomarkers', ['id'], unique=False)
    op.add_column('consultations', sa.Column('system_id', sa.String(), nullable=False))
    op.add_column('consultations', sa.Column('duration_minutes', sa.Integer(), nullable=False))
    op.add_column('consultations', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.create_index(op.f('ix_consultations_id'), 'consultations', ['id'], unique=False)
    op.create_index(op.f('ix_consultations_system_id'), 'consultations', ['system_id'], unique=False)
    op.create_foreign_key(None, 'consultations', 'systems', ['system_id'], ['id'], ondelete='CASCADE')
    op.drop_column('consultations', 'duration')
    op.create_index(op.f('ix_doctors_id'), 'doctors', ['id'], unique=False)
    op.add_column('lab_results', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.create_index(op.f('ix_lab_results_id'), 'lab_results', ['id'], unique=False)
    op.add_column('refresh_tokens', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.add_column('refresh_tokens', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.create_index(op.f('ix_refresh_tokens_id'), 'refresh_tokens', ['id'], unique=False)
    op.add_column('systems', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.drop_constraint('systems_name_key', 'systems', type_='unique')
    op.drop_constraint('systems_slug_key', 'systems', type_='unique')
    op.create_index(op.f('ix_systems_id'), 'systems', ['id'], unique=False)
    op.create_index(op.f('ix_systems_slug'), 'systems', ['slug'], unique=True)
    op.add_column('users', sa.Column('is_active', sa.Boolean(), nullable=False))
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_column('users', 'is_active')
    op.drop_index(op.f('ix_systems_slug'), table_name='systems')
    op.drop_index(op.f('ix_systems_id'), table_name='systems')
    op.create_unique_constraint('systems_slug_key', 'systems', ['slug'])
    op.create_unique_constraint('systems_name_key', 'systems', ['name'])
    op.drop_column('systems', 'is_active')
    op.drop_index(op.f('ix_refresh_tokens_id'), table_name='refresh_tokens')
    op.drop_column('refresh_tokens', 'updated_at')
    op.drop_column('refresh_tokens', 'is_active')
    op.drop_index(op.f('ix_lab_results_id'), table_name='lab_results')
    op.drop_column('lab_results', 'is_active')
    op.drop_index(op.f('ix_doctors_id'), table_name='doctors')
    op.add_column('consultations', sa.Column('duration', sa.INTEGER(), server_default=sa.text('30'), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'consultations', type_='foreignkey')
    op.drop_index(op.f('ix_consultations_system_id'), table_name='consultations')
    op.drop_index(op.f('ix_consultations_id'), table_name='consultations')
    op.drop_column('consultations', 'is_active')
    op.drop_column('consultations', 'duration_minutes')
    op.drop_column('consultations', 'system_id')
    op.drop_index(op.f('ix_biomarkers_id'), table_name='biomarkers')
    op.drop_column('biomarkers', 'is_active')
    op.drop_index(op.f('ix_availability_slots_id'), table_name='availability_slots')
    op.drop_column('availability_slots', 'updated_at')
    op.drop_index(op.f('ix_action_plans_id'), table_name='action_plans')
    op.drop_column('action_plans', 'is_active')
    op.drop_index(op.f('ix_action_items_id'), table_name='action_items')
    op.drop_column('action_items', 'is_active')
    op.create_table('feature_flags',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('system_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('flag_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('is_enabled', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False),
    sa.Column('rollout_percentage', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['system_id'], ['systems.id'], name='feature_flags_system_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='feature_flags_pkey'),
    sa.UniqueConstraint('system_id', 'flag_name', name='uix_feature_flag')
    )
    op.create_index('ix_feature_flags_system_id', 'feature_flags', ['system_id'], unique=False)
    op.create_table('system_configs',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('system_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('config_key', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('config_value', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('data_type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['system_id'], ['systems.id'], name='system_configs_system_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='system_configs_pkey'),
    sa.UniqueConstraint('system_id', 'config_key', name='uix_system_config')
    )
    op.create_index('ix_system_configs_system_id', 'system_configs', ['system_id'], unique=False)
    # ### end Alembic commands ###
