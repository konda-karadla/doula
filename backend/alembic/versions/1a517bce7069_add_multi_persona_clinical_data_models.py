"""add_multi_persona_clinical_data_models

Revision ID: 1a517bce7069
Revises: 02574a059fa8
Create Date: 2025-10-20 18:39:23.658249

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


revision: str = '1a517bce7069'
down_revision: Union[str, None] = '02574a059fa8'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('audit_logs',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('action_type', sa.Enum('CREATE', 'READ', 'UPDATE', 'DELETE', 'VIEW', 'LOGIN', 'LOGOUT', name='auditactiontype'), nullable=False),
    sa.Column('entity_type', sa.String(), nullable=False),
    sa.Column('entity_id', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('changes', sa.Text(), nullable=True),
    sa.Column('ip_address', sa.String(), nullable=True),
    sa.Column('user_agent', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_logs_action_type'), 'audit_logs', ['action_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_created_at'), 'audit_logs', ['created_at'], unique=False)
    op.create_index(op.f('ix_audit_logs_entity_id'), 'audit_logs', ['entity_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_entity_type'), 'audit_logs', ['entity_type'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_table('departments',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('system_id', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['system_id'], ['systems.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_departments_system_id'), 'departments', ['system_id'], unique=False)
    op.create_table('staff',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=False),
    sa.Column('system_id', sa.String(), nullable=False),
    sa.Column('department_id', sa.String(), nullable=True),
    sa.Column('staff_type', sa.Enum('PHYSICIAN', 'NUTRITIONIST', 'NURSE', 'ADMIN', name='stafftype'), nullable=False),
    sa.Column('license_number', sa.String(), nullable=True),
    sa.Column('credentials', sa.String(), nullable=True),
    sa.Column('specialization', sa.String(), nullable=True),
    sa.Column('hire_date', sa.Date(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['system_id'], ['systems.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_staff_department_id'), 'staff', ['department_id'], unique=False)
    op.create_index(op.f('ix_staff_is_active'), 'staff', ['is_active'], unique=False)
    op.create_index(op.f('ix_staff_staff_type'), 'staff', ['staff_type'], unique=False)
    op.create_index(op.f('ix_staff_system_id'), 'staff', ['system_id'], unique=False)
    op.create_index(op.f('ix_staff_user_id'), 'staff', ['user_id'], unique=True)
    op.create_table('lab_test_orders',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('patient_id', sa.String(), nullable=False),
    sa.Column('ordering_physician_id', sa.String(), nullable=False),
    sa.Column('system_id', sa.String(), nullable=False),
    sa.Column('order_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('priority', sa.Enum('ROUTINE', 'URGENT', 'STAT', name='laborderpriority'), nullable=False),
    sa.Column('test_types', sa.Text(), nullable=False),
    sa.Column('clinical_indication', sa.Text(), nullable=True),
    sa.Column('special_instructions', sa.Text(), nullable=True),
    sa.Column('external_lab_name', sa.String(), nullable=True),
    sa.Column('external_lab_reference', sa.String(), nullable=True),
    sa.Column('collection_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('collected_by', sa.String(), nullable=True),
    sa.Column('status', sa.Enum('ORDERED', 'COLLECTED', 'PROCESSING', 'COMPLETED', 'CANCELLED', name='laborderstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['collected_by'], ['staff.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['ordering_physician_id'], ['staff.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['system_id'], ['systems.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_lab_test_orders_order_date'), 'lab_test_orders', ['order_date'], unique=False)
    op.create_index(op.f('ix_lab_test_orders_ordering_physician_id'), 'lab_test_orders', ['ordering_physician_id'], unique=False)
    op.create_index(op.f('ix_lab_test_orders_patient_id'), 'lab_test_orders', ['patient_id'], unique=False)
    op.create_index(op.f('ix_lab_test_orders_priority'), 'lab_test_orders', ['priority'], unique=False)
    op.create_index(op.f('ix_lab_test_orders_status'), 'lab_test_orders', ['status'], unique=False)
    op.create_index(op.f('ix_lab_test_orders_system_id'), 'lab_test_orders', ['system_id'], unique=False)
    op.create_table('medical_histories',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('patient_id', sa.String(), nullable=False),
    sa.Column('recorded_by', sa.String(), nullable=True),
    sa.Column('chronic_conditions', sa.Text(), nullable=True),
    sa.Column('past_surgeries', sa.Text(), nullable=True),
    sa.Column('family_history', sa.Text(), nullable=True),
    sa.Column('allergies', sa.Text(), nullable=True),
    sa.Column('immunization_history', sa.Text(), nullable=True),
    sa.Column('social_history', sa.Text(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_reviewed_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['recorded_by'], ['staff.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_medical_histories_patient_id'), 'medical_histories', ['patient_id'], unique=True)
    op.create_table('medications',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('patient_id', sa.String(), nullable=False),
    sa.Column('prescribed_by', sa.String(), nullable=True),
    sa.Column('medication_name', sa.String(), nullable=False),
    sa.Column('generic_name', sa.String(), nullable=True),
    sa.Column('dosage', sa.String(), nullable=False),
    sa.Column('frequency', sa.String(), nullable=False),
    sa.Column('route', sa.String(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('indication', sa.Text(), nullable=True),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'COMPLETED', 'DISCONTINUED', 'ON_HOLD', name='medicationstatus'), nullable=False),
    sa.Column('discontinuation_reason', sa.Text(), nullable=True),
    sa.Column('discontinuation_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['prescribed_by'], ['staff.id'], ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_medications_patient_id'), 'medications', ['patient_id'], unique=False)
    op.create_index(op.f('ix_medications_prescribed_by'), 'medications', ['prescribed_by'], unique=False)
    op.create_index(op.f('ix_medications_status'), 'medications', ['status'], unique=False)
    op.create_table('nutrition_assessments',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('patient_id', sa.String(), nullable=False),
    sa.Column('nutritionist_id', sa.String(), nullable=False),
    sa.Column('assessment_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('current_weight', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('height', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('bmi', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('body_fat_percentage', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('dietary_restrictions', sa.Text(), nullable=True),
    sa.Column('current_diet_analysis', sa.Text(), nullable=True),
    sa.Column('nutritional_goals', sa.Text(), nullable=True),
    sa.Column('assessment_notes', sa.Text(), nullable=True),
    sa.Column('recommendations', sa.Text(), nullable=True),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['nutritionist_id'], ['staff.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nutrition_assessments_assessment_date'), 'nutrition_assessments', ['assessment_date'], unique=False)
    op.create_index(op.f('ix_nutrition_assessments_nutritionist_id'), 'nutrition_assessments', ['nutritionist_id'], unique=False)
    op.create_index(op.f('ix_nutrition_assessments_patient_id'), 'nutrition_assessments', ['patient_id'], unique=False)
    op.create_table('soap_notes',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('patient_id', sa.String(), nullable=False),
    sa.Column('physician_id', sa.String(), nullable=False),
    sa.Column('consultation_id', sa.String(), nullable=True),
    sa.Column('visit_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('chief_complaint', sa.Text(), nullable=True),
    sa.Column('subjective', sa.Text(), nullable=True),
    sa.Column('objective', sa.Text(), nullable=True),
    sa.Column('assessment', sa.Text(), nullable=True),
    sa.Column('plan', sa.Text(), nullable=True),
    sa.Column('follow_up_date', sa.DateTime(timezone=True), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'COMPLETED', 'SIGNED', name='soapnotestatus'), nullable=False),
    sa.Column('signed_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('signature_data', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['consultation_id'], ['consultations.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['physician_id'], ['staff.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_soap_notes_consultation_id'), 'soap_notes', ['consultation_id'], unique=False)
    op.create_index(op.f('ix_soap_notes_patient_id'), 'soap_notes', ['patient_id'], unique=False)
    op.create_index(op.f('ix_soap_notes_physician_id'), 'soap_notes', ['physician_id'], unique=False)
    op.create_index(op.f('ix_soap_notes_status'), 'soap_notes', ['status'], unique=False)
    op.create_index(op.f('ix_soap_notes_visit_date'), 'soap_notes', ['visit_date'], unique=False)
    op.create_table('vitals_records',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('patient_id', sa.String(), nullable=False),
    sa.Column('nurse_id', sa.String(), nullable=False),
    sa.Column('recorded_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('location', sa.Enum('CLINIC', 'HOME', 'HOSPITAL', 'EMERGENCY', name='vitalslocation'), nullable=False),
    sa.Column('blood_pressure_systolic', sa.Integer(), nullable=True),
    sa.Column('blood_pressure_diastolic', sa.Integer(), nullable=True),
    sa.Column('heart_rate', sa.Integer(), nullable=True),
    sa.Column('temperature', sa.Numeric(precision=4, scale=1), nullable=True),
    sa.Column('respiratory_rate', sa.Integer(), nullable=True),
    sa.Column('oxygen_saturation', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('height', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('bmi', sa.Numeric(precision=4, scale=2), nullable=True),
    sa.Column('blood_glucose', sa.Integer(), nullable=True),
    sa.Column('pain_level', sa.Integer(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('NORMAL', 'ABNORMAL', 'CRITICAL', name='vitalsstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['nurse_id'], ['staff.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vitals_records_nurse_id'), 'vitals_records', ['nurse_id'], unique=False)
    op.create_index(op.f('ix_vitals_records_patient_id'), 'vitals_records', ['patient_id'], unique=False)
    op.create_index(op.f('ix_vitals_records_recorded_at'), 'vitals_records', ['recorded_at'], unique=False)
    op.create_index(op.f('ix_vitals_records_status'), 'vitals_records', ['status'], unique=False)
    op.create_table('meal_plans',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('assessment_id', sa.String(), nullable=False),
    sa.Column('patient_id', sa.String(), nullable=False),
    sa.Column('nutritionist_id', sa.String(), nullable=False),
    sa.Column('plan_name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('daily_calorie_target', sa.Integer(), nullable=True),
    sa.Column('protein_target_grams', sa.Integer(), nullable=True),
    sa.Column('carbs_target_grams', sa.Integer(), nullable=True),
    sa.Column('fats_target_grams', sa.Integer(), nullable=True),
    sa.Column('special_instructions', sa.Text(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'COMPLETED', 'REVISED', 'CANCELLED', name='mealplanstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['assessment_id'], ['nutrition_assessments.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['nutritionist_id'], ['staff.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meal_plans_assessment_id'), 'meal_plans', ['assessment_id'], unique=False)
    op.create_index(op.f('ix_meal_plans_nutritionist_id'), 'meal_plans', ['nutritionist_id'], unique=False)
    op.create_index(op.f('ix_meal_plans_patient_id'), 'meal_plans', ['patient_id'], unique=False)
    op.create_index(op.f('ix_meal_plans_status'), 'meal_plans', ['status'], unique=False)
    op.create_table('soap_note_attachments',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('soap_note_id', sa.String(), nullable=False),
    sa.Column('file_type', sa.Enum('IMAGE', 'DOCUMENT', 'AUDIO', name='attachmenttype'), nullable=False),
    sa.Column('file_name', sa.String(), nullable=False),
    sa.Column('s3_key', sa.String(), nullable=False),
    sa.Column('s3_url', sa.String(), nullable=False),
    sa.Column('file_size', sa.String(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['soap_note_id'], ['soap_notes.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_soap_note_attachments_soap_note_id'), 'soap_note_attachments', ['soap_note_id'], unique=False)
    op.create_table('vitals_alerts',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('vitals_record_id', sa.String(), nullable=False),
    sa.Column('alert_type', sa.Enum('HIGH_BP', 'LOW_BP', 'HIGH_TEMP', 'LOW_TEMP', 'HIGH_HEART_RATE', 'LOW_HEART_RATE', 'LOW_OXYGEN', 'HIGH_GLUCOSE', 'LOW_GLUCOSE', name='vitalsalerttype'), nullable=False),
    sa.Column('severity', sa.Enum('INFO', 'WARNING', 'CRITICAL', name='alertseverity'), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('is_acknowledged', sa.Boolean(), nullable=False),
    sa.Column('acknowledged_by', sa.String(), nullable=True),
    sa.Column('acknowledged_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('resolution_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['acknowledged_by'], ['staff.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vitals_record_id'], ['vitals_records.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_vitals_alerts_alert_type'), 'vitals_alerts', ['alert_type'], unique=False)
    op.create_index(op.f('ix_vitals_alerts_severity'), 'vitals_alerts', ['severity'], unique=False)
    op.create_index(op.f('ix_vitals_alerts_vitals_record_id'), 'vitals_alerts', ['vitals_record_id'], unique=False)
    op.create_table('meal_plan_days',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('meal_plan_id', sa.String(), nullable=False),
    sa.Column('day_number', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['meal_plan_id'], ['meal_plans.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meal_plan_days_meal_plan_id'), 'meal_plan_days', ['meal_plan_id'], unique=False)
    op.create_table('nutrition_feedback',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('patient_id', sa.String(), nullable=False),
    sa.Column('nutritionist_id', sa.String(), nullable=False),
    sa.Column('meal_plan_id', sa.String(), nullable=True),
    sa.Column('feedback_date', sa.DateTime(timezone=True), nullable=False),
    sa.Column('compliance_level', sa.Enum('POOR', 'FAIR', 'GOOD', 'EXCELLENT', name='compliancelevel'), nullable=True),
    sa.Column('current_weight', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('weight_change', sa.Numeric(precision=5, scale=2), nullable=True),
    sa.Column('energy_levels', sa.String(), nullable=True),
    sa.Column('dietary_adherence_notes', sa.Text(), nullable=True),
    sa.Column('adjustments_recommended', sa.Text(), nullable=True),
    sa.Column('positive_observations', sa.Text(), nullable=True),
    sa.Column('challenges_identified', sa.Text(), nullable=True),
    sa.Column('next_review_date', sa.Date(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['meal_plan_id'], ['meal_plans.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['nutritionist_id'], ['staff.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['patient_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_nutrition_feedback_feedback_date'), 'nutrition_feedback', ['feedback_date'], unique=False)
    op.create_index(op.f('ix_nutrition_feedback_meal_plan_id'), 'nutrition_feedback', ['meal_plan_id'], unique=False)
    op.create_index(op.f('ix_nutrition_feedback_nutritionist_id'), 'nutrition_feedback', ['nutritionist_id'], unique=False)
    op.create_index(op.f('ix_nutrition_feedback_patient_id'), 'nutrition_feedback', ['patient_id'], unique=False)
    op.create_table('meal_plan_meals',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('day_id', sa.String(), nullable=False),
    sa.Column('meal_type', sa.Enum('BREAKFAST', 'LUNCH', 'DINNER', 'SNACK', 'MORNING_SNACK', 'EVENING_SNACK', name='mealtype'), nullable=False),
    sa.Column('time_suggestion', sa.String(), nullable=True),
    sa.Column('meal_name', sa.String(), nullable=False),
    sa.Column('meal_description', sa.Text(), nullable=True),
    sa.Column('ingredients', sa.Text(), nullable=True),
    sa.Column('calories', sa.Integer(), nullable=True),
    sa.Column('protein_grams', sa.Integer(), nullable=True),
    sa.Column('carbs_grams', sa.Integer(), nullable=True),
    sa.Column('fats_grams', sa.Integer(), nullable=True),
    sa.Column('preparation_notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['day_id'], ['meal_plan_days.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_meal_plan_meals_day_id'), 'meal_plan_meals', ['day_id'], unique=False)
    
    # Create ENUM type for LabTestCategory
    sa.Enum('BLOOD_WORK', 'URINALYSIS', 'IMAGING', 'PATHOLOGY', 'MICROBIOLOGY', 'GENETIC', 'OTHER', name='labtestcategory').create(op.get_bind(), checkfirst=True)
    
    op.add_column('biomarkers', sa.Column('is_critical', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('biomarkers', sa.Column('physician_comment', sa.Text(), nullable=True))
    op.add_column('biomarkers', sa.Column('trend_direction', sa.String(), nullable=True))
    op.add_column('biomarkers', sa.Column('previous_value', sa.String(), nullable=True))
    op.add_column('lab_results', sa.Column('ordered_by', sa.String(), nullable=True))
    op.add_column('lab_results', sa.Column('lab_name', sa.String(), nullable=True))
    op.add_column('lab_results', sa.Column('lab_test_type', sa.String(), nullable=True))
    op.add_column('lab_results', sa.Column('test_category', sa.Enum('BLOOD_WORK', 'URINALYSIS', 'IMAGING', 'PATHOLOGY', 'MICROBIOLOGY', 'GENETIC', 'OTHER', name='labtestcategory'), nullable=True))
    op.add_column('lab_results', sa.Column('is_reviewed', sa.Boolean(), nullable=False, server_default='false'))
    op.add_column('lab_results', sa.Column('reviewed_by', sa.String(), nullable=True))
    op.add_column('lab_results', sa.Column('reviewed_at', sa.DateTime(timezone=True), nullable=True))
    op.add_column('lab_results', sa.Column('physician_notes', sa.Text(), nullable=True))
    op.add_column('lab_results', sa.Column('interpretation', sa.Text(), nullable=True))
    op.create_index(op.f('ix_lab_results_ordered_by'), 'lab_results', ['ordered_by'], unique=False)
    op.create_index(op.f('ix_lab_results_test_category'), 'lab_results', ['test_category'], unique=False)
    op.create_foreign_key(None, 'lab_results', 'staff', ['ordered_by'], ['id'], ondelete='SET NULL')
    op.create_foreign_key(None, 'lab_results', 'staff', ['reviewed_by'], ['id'], ondelete='SET NULL')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'lab_results', type_='foreignkey')
    op.drop_constraint(None, 'lab_results', type_='foreignkey')
    op.drop_index(op.f('ix_lab_results_test_category'), table_name='lab_results')
    op.drop_index(op.f('ix_lab_results_ordered_by'), table_name='lab_results')
    op.drop_column('lab_results', 'interpretation')
    op.drop_column('lab_results', 'physician_notes')
    op.drop_column('lab_results', 'reviewed_at')
    op.drop_column('lab_results', 'reviewed_by')
    op.drop_column('lab_results', 'is_reviewed')
    op.drop_column('lab_results', 'test_category')
    op.drop_column('lab_results', 'lab_test_type')
    op.drop_column('lab_results', 'lab_name')
    op.drop_column('lab_results', 'ordered_by')
    op.drop_column('biomarkers', 'previous_value')
    op.drop_column('biomarkers', 'trend_direction')
    op.drop_column('biomarkers', 'physician_comment')
    op.drop_column('biomarkers', 'is_critical')
    
    # Drop ENUM type for LabTestCategory
    sa.Enum(name='labtestcategory').drop(op.get_bind(), checkfirst=True)
    
    op.drop_index(op.f('ix_meal_plan_meals_day_id'), table_name='meal_plan_meals')
    op.drop_table('meal_plan_meals')
    op.drop_index(op.f('ix_nutrition_feedback_patient_id'), table_name='nutrition_feedback')
    op.drop_index(op.f('ix_nutrition_feedback_nutritionist_id'), table_name='nutrition_feedback')
    op.drop_index(op.f('ix_nutrition_feedback_meal_plan_id'), table_name='nutrition_feedback')
    op.drop_index(op.f('ix_nutrition_feedback_feedback_date'), table_name='nutrition_feedback')
    op.drop_table('nutrition_feedback')
    op.drop_index(op.f('ix_meal_plan_days_meal_plan_id'), table_name='meal_plan_days')
    op.drop_table('meal_plan_days')
    op.drop_index(op.f('ix_vitals_alerts_vitals_record_id'), table_name='vitals_alerts')
    op.drop_index(op.f('ix_vitals_alerts_severity'), table_name='vitals_alerts')
    op.drop_index(op.f('ix_vitals_alerts_alert_type'), table_name='vitals_alerts')
    op.drop_table('vitals_alerts')
    op.drop_index(op.f('ix_soap_note_attachments_soap_note_id'), table_name='soap_note_attachments')
    op.drop_table('soap_note_attachments')
    op.drop_index(op.f('ix_meal_plans_status'), table_name='meal_plans')
    op.drop_index(op.f('ix_meal_plans_patient_id'), table_name='meal_plans')
    op.drop_index(op.f('ix_meal_plans_nutritionist_id'), table_name='meal_plans')
    op.drop_index(op.f('ix_meal_plans_assessment_id'), table_name='meal_plans')
    op.drop_table('meal_plans')
    op.drop_index(op.f('ix_vitals_records_status'), table_name='vitals_records')
    op.drop_index(op.f('ix_vitals_records_recorded_at'), table_name='vitals_records')
    op.drop_index(op.f('ix_vitals_records_patient_id'), table_name='vitals_records')
    op.drop_index(op.f('ix_vitals_records_nurse_id'), table_name='vitals_records')
    op.drop_table('vitals_records')
    op.drop_index(op.f('ix_soap_notes_visit_date'), table_name='soap_notes')
    op.drop_index(op.f('ix_soap_notes_status'), table_name='soap_notes')
    op.drop_index(op.f('ix_soap_notes_physician_id'), table_name='soap_notes')
    op.drop_index(op.f('ix_soap_notes_patient_id'), table_name='soap_notes')
    op.drop_index(op.f('ix_soap_notes_consultation_id'), table_name='soap_notes')
    op.drop_table('soap_notes')
    op.drop_index(op.f('ix_nutrition_assessments_patient_id'), table_name='nutrition_assessments')
    op.drop_index(op.f('ix_nutrition_assessments_nutritionist_id'), table_name='nutrition_assessments')
    op.drop_index(op.f('ix_nutrition_assessments_assessment_date'), table_name='nutrition_assessments')
    op.drop_table('nutrition_assessments')
    op.drop_index(op.f('ix_medications_status'), table_name='medications')
    op.drop_index(op.f('ix_medications_prescribed_by'), table_name='medications')
    op.drop_index(op.f('ix_medications_patient_id'), table_name='medications')
    op.drop_table('medications')
    op.drop_index(op.f('ix_medical_histories_patient_id'), table_name='medical_histories')
    op.drop_table('medical_histories')
    op.drop_index(op.f('ix_lab_test_orders_system_id'), table_name='lab_test_orders')
    op.drop_index(op.f('ix_lab_test_orders_status'), table_name='lab_test_orders')
    op.drop_index(op.f('ix_lab_test_orders_priority'), table_name='lab_test_orders')
    op.drop_index(op.f('ix_lab_test_orders_patient_id'), table_name='lab_test_orders')
    op.drop_index(op.f('ix_lab_test_orders_ordering_physician_id'), table_name='lab_test_orders')
    op.drop_index(op.f('ix_lab_test_orders_order_date'), table_name='lab_test_orders')
    op.drop_table('lab_test_orders')
    op.drop_index(op.f('ix_staff_user_id'), table_name='staff')
    op.drop_index(op.f('ix_staff_system_id'), table_name='staff')
    op.drop_index(op.f('ix_staff_staff_type'), table_name='staff')
    op.drop_index(op.f('ix_staff_is_active'), table_name='staff')
    op.drop_index(op.f('ix_staff_department_id'), table_name='staff')
    op.drop_table('staff')
    op.drop_index(op.f('ix_departments_system_id'), table_name='departments')
    op.drop_table('departments')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_entity_type'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_entity_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_created_at'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action_type'), table_name='audit_logs')
    op.drop_table('audit_logs')
    # ### end Alembic commands ###
