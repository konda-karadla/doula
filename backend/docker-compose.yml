version: '3.8'

services:
  # Redis for caching and task queue
  redis:
    image: redis:7-alpine
    container_name: health-platform-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    restart: unless-stopped
    networks:
      - health-platform

  # Celery Worker
  celery_worker:
    build:
      context: ..
      dockerfile: backend/Dockerfile
    container_name: health-platform-celery
    environment:
      # Use your existing AWS RDS PostgreSQL database
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=${JWT_SECRET}
      - REFRESH_TOKEN_SECRET=${REFRESH_TOKEN_SECRET}
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - ENVIRONMENT=development
    depends_on:
      - redis
    volumes:
      - ../backend:/app
      - /app/venv  # Exclude venv from volume mount
    command: celery -A backend.core.celery_app worker --loglevel=info
    restart: unless-stopped
    networks:
      - health-platform

volumes:
  redis_data:
    driver: local

networks:
  health-platform:
    driver: bridge
